# Production Configuration
replicaCount: 3

# Container Image
image:
  repository: ghcr.io/stefanprodan/podinfo
  tag: 6.5.0
  pullPolicy: IfNotPresent

# Resource Management
resources:
  requests: {cpu: 200m, memory: 128Mi}
  limits: {cpu: 500m, memory: 256Mi}

# Health Checks
livenessProbe:
  path: /healthz
  port: http
  initialDelaySeconds: 30
  periodSeconds: 10
  failureThreshold: 3

readinessProbe:
  path: /readyz
  port: http
  initialDelaySeconds: 5
  periodSeconds: 5
  failureThreshold: 3

# Monitoring
metrics:
  enabled: true
  serviceMonitor: {enabled: true, interval: 15s}

# Auto-scaling
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource: {name: cpu, target: {type: Utilization, averageUtilization: 70}}
    - type: Resource
      resource: {name: memory, target: {type: AverageValue, averageValue: 200Mi}}

# Security
podSecurityContext:
  fsGroup: 1000
  runAsNonRoot: true
  runAsUser: 1000
  seccompProfile: {type: RuntimeDefault}

securityContext:
  allowPrivilegeEscalation: false
  readOnlyRootFilesystem: true
  capabilities: {drop: [ALL]}

# Environment
env:
  - {name: ENVIRONMENT, value: "production"}
  - {name: LOG_LEVEL, value: "info"}
  - {name: REQUEST_TIMEOUT, value: "30s"}

# Ingress Configuration
ingress:
  enabled: true
  className: nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts:
    - host: podinfo.app.local
      paths: [{path: /, pathType: Prefix}]
  tls: [{secretName: podinfo-tls, hosts: [podinfo.app.local]}]

# High Availability
podDisruptionBudget: {enabled: true, minAvailable: 2}

affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector: {matchExpressions: [{key: app.kubernetes.io/name, operator: In, values: [podinfo]}]}
        topologyKey: kubernetes.io/hostname

topologySpreadConstraints:
  - maxSkew: 1
    topologyKey: topology.kubernetes.io/zone
    whenUnsatisfiable: ScheduleAnyway
    labelSelector: {matchLabels: {app.kubernetes.io/name: podinfo}}
